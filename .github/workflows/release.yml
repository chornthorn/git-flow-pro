name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release Archive
        run: |
          git archive --format=tar.gz --prefix=git-flow-pro-${{ steps.get_version.outputs.VERSION }}/ ${{ steps.get_version.outputs.VERSION }} > git-flow-pro-${{ steps.get_version.outputs.VERSION }}.tar.gz

      - name: Get SHA256
        id: get_sha
        run: |
          echo "SHA256=$(shasum -a 256 git-flow-pro-${{ steps.get_version.outputs.VERSION }}.tar.gz | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: git-flow-pro-${{ steps.get_version.outputs.VERSION }}.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation
            ```bash
            brew tap chornthorn/git-flow-pro
            brew install git-flow-pro
            ```

            SHA256: `${{ steps.get_sha.outputs.SHA256 }}`

      - name: Trigger Formula Update
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          # Remove 'v' prefix for version if present
          VERSION_NO_V=$(echo ${{ steps.get_version.outputs.VERSION }} | sed 's/^v//')

          # Trigger repository dispatch event
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.RELEASE_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/chornthorn/homebrew-git-flow-pro/dispatches \
            -d '{
              "event_type": "update-formula",
              "client_payload": {
                "version": "${{ steps.get_version.outputs.VERSION }}",
                "sha256": "${{ steps.get_sha.outputs.SHA256 }}"
              }
            }'

      - name: Verify Formula Update
        run: |
          echo "‚úÖ Release ${{ steps.get_version.outputs.VERSION }} created"
          echo "üîç SHA256: ${{ steps.get_sha.outputs.SHA256 }}"
          echo "üì¶ Formula update triggered"
